daemon off;
user nginx www-data;
worker_processes  1;
pid /var/run/nginx.pid;
error_log  /media/koken/logs/error.log;

events {
	use epoll;
    worker_connections  1024;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types; # Update if necessary  
    default_type  application/octet-stream;
  sendfile on;
  include    /etc/nginx/fastcgi.conf;
  tcp_nopush   on;
  client_body_temp_path /tmp/nginx/body 1 2;
  fastcgi_temp_path /tmp/nginx/fastcgi_temp 1 2;

  client_max_body_size 8M;
   client_body_timeout 12;
client_header_timeout 12;
keepalive_timeout 15;
send_timeout 10;
 
    server {
        listen       80;
        server_name  localhost;
        root   /media/koken/www; # Replace with the correct path
        index index.html index.php;
 		disable_symlinks off;      
 		  
# Enable gzip. Highly recommending for best peformance
gzip on;
gzip_comp_level 3;
gzip_types text/html text/css text/javascript application/json application/javascript application/x-javascript;

# By default, do not set expire headers
expires 0;

# Set expires header for console CSS and JS.
# These files are timestamped with each new release, so it is safe to cache them agressively.
location ~ "console_.*\.(js|css)$" {
    expires max;
}

# Catch image requests and pass them back to PHP if a cache does not yet exist
location ~ "^/storage/cache/images(/(([0-9]{3}/[0-9]{3})|custom)/.*)$" {
    # Cached images have timestamps in the URL, so it is safe to set
    # aggresive cache headers here.
    expires max;
    try_files $uri /i.php?path=$1;
}

# Catch .css.lens requests and serve cache when possible
location ~ "(lightbox-)?settings.css.lens$" {
    default_type text/css;
    try_files /storage/cache/site/${uri} /app/site/site.php?url=/$1settings.css.lens;
}

# Catch koken.js requests and serve cache when possible
location ~ koken.js$ {
    default_type text/javascript;
    try_files /storage/cache/site/${uri} /app/site/site.php?url=/koken.js;
}

# Standard site requests are cached with .html extensions
set $cache_ext 'html';

# PJAX requests contain the _pjax GET parameter and are cached with .phtml extensions
if ($arg__pjax) {
    set $cache_ext 'phtml';
}

# Do not check for a cache for non-GET requests
if ($request_method != 'GET') {
    set $cache_ext 'nocache';
}

# If share_to_tumblr cookie is preset, disable caching (long story)
if ($http_cookie ~* "share_to_tumblr" ) {
    set $cache_ext 'nocache';
}

# Catch root requests
location ~ ^/?$ {
    try_files /storage/cache/site/index/cache.$cache_ext /app/site/site.php?url=/;
}

# All other requests get passed back to Koken unless file already exists
location / {
    try_files $uri $uri/ /storage/cache/site/${uri} /storage/cache/site/${uri}cache.$cache_ext /app/site/site.php?url=$uri&$args;
}
 error_page 404 /index.php/error/404;

 location ~ \.php$ {
                fastcgi_split_path_info ^(.+?\.php)(/.*)$;
                 fastcgi_pass 127.0.0.1:9000;
                #fastcgi_pass unix:/var/run/php-fpm/socket;
                fastcgi_index index.php;
                include fastcgi.conf;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                #fastcgi_read_timeout 300s;
        }
    }
}
